# Generated by Django 4.1.2 on 2022-11-16 22:15

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_seeker', models.BooleanField(default=False)),
                ('is_administrator', models.BooleanField(default=False)),
                ('has_credentials', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('position', models.CharField(max_length=50, verbose_name='Position')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('full_name', models.CharField(max_length=100, verbose_name='Full Name')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('facility_enrolled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Seeker',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('full_name', models.CharField(max_length=50, verbose_name='Full Name')),
                ('birth_date', models.DateField(verbose_name='Birth Date')),
                ('ssn', models.CharField(max_length=50, verbose_name='SSN')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('specialty', models.TextField(verbose_name='Specialty')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Phone Number')),
                ('address', models.CharField(max_length=100, verbose_name='Address')),
                ('has_been_disqualified', models.BooleanField(default=False, verbose_name='Have you ever been placed on the disqualified employees Registry?')),
                ('has_been_terminated', models.BooleanField(default=False, verbose_name="Have you ever had you're employment terminated?")),
                ('verified', models.BooleanField(default=False, verbose_name='Verified')),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.administrator')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('website_url', models.CharField(max_length=150, verbose_name='Website URL')),
                ('taxID', models.CharField(max_length=50, verbose_name='Tax ID Number')),
            ],
        ),
        migrations.CreateModel(
            name='SeekerEmploymentVerifications',
            fields=[
                ('seeker', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.seeker')),
                ('photo_URL', models.URLField(max_length=255, verbose_name='Photo URL')),
                ('resume_URL', models.URLField(max_length=255, verbose_name='Resume URL')),
                ('tb_verification_URL', models.URLField(max_length=255, verbose_name='TB Verification')),
                ('flu_verification_URL', models.URLField(max_length=255, verbose_name='Flu Verification')),
                ('covid_verification_URL', models.URLField(max_length=255, verbose_name='COVID 19 Verification')),
            ],
        ),
        migrations.CreateModel(
            name='ShiftPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=50, verbose_name='Department')),
                ('position', models.CharField(max_length=50, verbose_name='Position')),
                ('special_qualifications', models.TextField(verbose_name='Special Qualifications')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('shift_start', models.TimeField(verbose_name='Shift Start')),
                ('shift_end', models.TimeField(verbose_name='Shift End')),
                ('rate_of_pay', models.CharField(max_length=50, verbose_name='Rate Of Pay')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.administrator')),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.facility')),
            ],
        ),
    ]
